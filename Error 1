Arduino: 1.8.12 (Windows 7), Board: "Proffieboard V2, Serial, SDCARD (SPI), 80 MHz, Smallest Code"

In file included from C:\Users\dryxhyl\Desktop\ProffieOS\ProffieOS.ino:407:0:

sketch\styles/inout_helper.h: In instantiation of 'decltype (((InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>*)this)->InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>::out_tr_.getColor(((InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>*)this)->InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>::in_tr_.getColor(RGBA_um_nod::Transparent(), ((InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>*)this)->InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>::off_color_.getColor(led), led), RGBA_um_nod::Transparent(), led)) InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>::getColor(int) [with OutTr = TrInstant; InTr = TrFadeX<Int<300> >; OFF = Layers<RotateColorsX<Variation, Rgb<100, 100, 150> >, AlphaL<RotateColorsX<Variation, Rgb<4, 4, 6> >, PulsingF<Int<3000> > > >; bool ALLOW_DISABLE = true; decltype (((InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>*)this)->InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>::out_tr_.getColor(((InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>*)this)->InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>::in_tr_.getColor(RGBA_um_nod::Transparent(), ((InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>*)this)->InOutTrL<OutTr, InTr, OFF, ALLOW_DISABLE>::off_color_.getColor(led), led), RGBA_um_nod::Transparent(), led)) = RGBA_um_nod]':

sketch\styles/layers.h:39:32:   required from 'decltype ((((Layers<BASE, L1>*)this)->Layers<BASE, L1>::base_.getColor(led) << ((Layers<BASE, L1>*)this)->Layers<BASE, L1>::layer_.getColor(led))) Layers<BASE, L1>::getColor(int) [with BASE = Layers<Layers<Layers<Layers<Layers<Layers<StripesX<Int<3500>, Int<-3000>, RotateColorsX<Variation, Rgb<100, 100, 150> >, RotateColorsX<Variation, Rgb<25, 25, 40> >, RotateColorsX<Variation, Rgb<130, 130, 180> >, RotateColorsX<Variation, Rgb<50, 50, 75> > >, TransitionEffectL<TrConcat<TrInstant, AlphaL<AlphaL<Rgb<255, 255, 255>, Int<16000> >, BrownNoiseF<Int<50> > >, TrSmoothFadeX<Int<600> > >, (EffectType)7> >, LockupTrL<AlphaL<AlphaL<Rgb<255, 0, 0>, Int<0> >, Bump<Scale<BladeAngleX<Int<0>, Int<32768> >, Scale<BladeAngleX<Int<0>, Int<16000> >, Int<4000>, Int<26000> >, Int<6000> >, Scale<SwingSpeedX<Int<100> >, Int<9000>, Int<14000> > > >, TrConcat<TrInstant, Rgb<255, 255, 255>, TrFadeX<Int<200> > >, TrFadeX<Int<400> >, (SaberBase::LockupType)1u> >, LockupTrL<AlphaL<AlphaL<Rgb<255, 0, 0>, Int<0> >, LayerFunctions<Bump<Scale<SlowNoise<Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<2100>, Int<1000> > >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<3000>, Int<10000> >, Int<16000> >, Scale<BrownNoiseF<Int<10> >, Scale<TwistAngle<2, 0>, Int<4000>, Int<10000> >, Scale<TwistAngle<2, 0>, Int<9000>, Int<14000> > > >, Bump<Scale<SlowNoise<Int<2200> >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<26000>, Int<18000> >, Int<8000> >, Scale<NoisySoundLevel, Scale<TwistAngle<2, 0>, Int<6000>, Int<10000> >, Scale<TwistAngle<2, 0>, Int<10000>, Int<14000> > > >, Bump<Scale<SlowNoise<Int<2300> >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<20000>, Int<16000> >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<30000>, Int<24000> > >, Scale<IsLessThan<SlowNoise<Int<2000> >, Int<12000> >, Scale<NoisySoundLevel, Scale<TwistAngle<2, 0>, Int<9000>, Int<5000> >, Int<0> >, Int<0> > > > >, TrConcat<TrInstant, AlphaL<Rgb<255, 255, 255>, Bump<Int<12000>, Int<18000> > >, TrFadeX<Int<200> > >, TrConcat<TrInstant, AlphaL<AlphaL<Rgb<255, 255, 255>, Int<16000> >, HumpFlickerF<30> >, TrSmoothFadeX<Int<600> > >, (SaberBase::LockupType)6u> >, AlphaL<Rgb<255, 255, 255>, BlastF<200, 100, 400, (EffectType)2> > >, SimpleClashL<Rgb<255, 255, 255>, 40, (EffectType)1, SmoothStep<Int<16384>, Int<24000> > > >, TransitionEffectL<TrConcat<TrInstant, AlphaL<Rgb<255, 255, 255>, NoisySoundLevelCompat>, TrFadeX<Int<800> > >, (EffectType)11> >; L1 = InOutTrL<TrInstant, TrFadeX<Int<300> >, Layers<RotateColorsX<Variation, Rgb<100, 100, 150> >, AlphaL<RotateColorsX<Variation, Rgb<4, 4, 6> >, PulsingF<Int<3000> > > > >; decltype ((((Layers<BASE, L1>*)this)->Layers<BASE, L1>::base_.getColor(led) << ((Layers<BASE, L1>*)this)->Layers<BASE, L1>::layer_.getColor(led))) = OverDriveColor]'

sketch\styles/style_ptr.h:45:42:   required from 'void Style<T>::run(BladeBase*) [with T = Layers<StripesX<Int<3500>, Int<-3000>, RotateColorsX<Variation, Rgb<100, 100, 150> >, RotateColorsX<Variation, Rgb<25, 25, 40> >, RotateColorsX<Variation, Rgb<130, 130, 180> >, RotateColorsX<Variation, Rgb<50, 50, 75> > >, TransitionEffectL<TrConcat<TrInstant, AlphaL<AlphaL<Rgb<255, 255, 255>, Int<16000> >, BrownNoiseF<Int<50> > >, TrSmoothFadeX<Int<600> > >, (EffectType)7>, LockupTrL<AlphaL<AlphaL<Rgb<255, 0, 0>, Int<0> >, Bump<Scale<BladeAngleX<Int<0>, Int<32768> >, Scale<BladeAngleX<Int<0>, Int<16000> >, Int<4000>, Int<26000> >, Int<6000> >, Scale<SwingSpeedX<Int<100> >, Int<9000>, Int<14000> > > >, TrConcat<TrInstant, Rgb<255, 255, 255>, TrFadeX<Int<200> > >, TrFadeX<Int<400> >, (SaberBase::LockupType)1u>, LockupTrL<AlphaL<AlphaL<Rgb<255, 0, 0>, Int<0> >, LayerFunctions<Bump<Scale<SlowNoise<Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<2100>, Int<1000> > >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<3000>, Int<10000> >, Int<16000> >, Scale<BrownNoiseF<Int<10> >, Scale<TwistAngle<2, 0>, Int<4000>, Int<10000> >, Scale<TwistAngle<2, 0>, Int<9000>, Int<14000> > > >, Bump<Scale<SlowNoise<Int<2200> >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<26000>, Int<18000> >, Int<8000> >, Scale<NoisySoundLevel, Scale<TwistAngle<2, 0>, Int<6000>, Int<10000> >, Scale<TwistAngle<2, 0>, Int<10000>, Int<14000> > > >, Bump<Scale<SlowNoise<Int<2300> >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<20000>, Int<16000> >, Scale<BladeAngleX<Int<24000>, Int<32768> >, Int<30000>, Int<24000> > >, Scale<IsLessThan<SlowNoise<Int<2000> >, Int<12000> >, Scale<NoisySoundLevel, Scale<TwistAngle<2, 0>, Int<9000>, Int<5000> >, Int<0> >, Int<0> > > > >, TrConcat<TrInstant, AlphaL<Rgb<255, 255, 255>, Bump<Int<12000>, Int<18000> > >, TrFadeX<Int<200> > >, TrConcat<TrInstant, AlphaL<AlphaL<Rgb<255, 255, 255>, Int<16000> >, HumpFlickerF<30> >, TrSmoothFadeX<Int<600> > >, (SaberBase::LockupType)6u>, AlphaL<Rgb<255, 255, 255>, BlastF<200, 100, 400, (EffectType)2> >, SimpleClashL<Rgb<255, 255, 255>, 40, (EffectType)1, SmoothStep<Int<16384>, Int<24000> > >, TransitionEffectL<TrConcat<TrInstant, AlphaL<Rgb<255, 255, 255>, NoisySoundLevelCompat>, TrFadeX<Int<800> > >, (EffectType)11>, InOutTrL<TrInstant, TrFadeX<Int<300> >, Layers<RotateColorsX<Variation, Rgb<100, 100, 150> >, AlphaL<RotateColorsX<Variation, Rgb<4, 4, 6> >, PulsingF<Int<3000> > > >, true> >]'

C:\Users\dryxhyl\Desktop\ProffieOS\ProffieOS.ino:1815:1:   required from here

sketch\styles/inout_helper.h:89:83: error: could not convert '((InOutTrL<TrInstant, TrFadeX<Int<300> >, Layers<RotateColorsX<Variation, Rgb<100, 100, 150> >, AlphaL<RotateColorsX<Variation, Rgb<4, 4, 6> >, PulsingF<Int<3000> > > > >*)this)->InOutTrL<TrInstant, TrFadeX<Int<300> >, Layers<RotateColorsX<Variation, Rgb<100, 100, 150> >, AlphaL<RotateColorsX<Variation, Rgb<4, 4, 6> >, PulsingF<Int<3000> > > > >::in_tr_.TransitionHelper<T>::getColor<RGBA_um_nod, SimpleColor>(((InOutTrL<TrInstant, TrFadeX<Int<300> >, Layers<RotateColorsX<Variation, Rgb<100, 100, 150> >, AlphaL<RotateColorsX<Variation, Rgb<4, 4, 6> >, PulsingF<Int<3000> > > > >*)this)->InOutTrL<TrInstant, TrFadeX<Int<300> >, Layers<RotateColorsX<Variation, Rgb<100, 100, 150> >, AlphaL<RotateColorsX<Variation, Rgb<4, 4, 6> >, PulsingF<Int<3000> > > > >::out_tr_.TransitionHelper<T>::getColor<SimpleColor, RGBA_um_nod>(off_color, on_color, led), off_color, led)' from 'std::remove_const<RGBA_nod>::type {aka RGBA_nod}' to 'std::remove_const<const RGBA_um_nod>::type {aka RGBA_um_nod}'

  return in_tr_.getColor(out_tr_.getColor(off_color, on_color, led), off_color, led);

                                                                                   ^

exit status 1
Error compiling for board Proffieboard V2.

This report would have more information with
"Show verbose output during compilation"
option enabled in File -> Preferences.
